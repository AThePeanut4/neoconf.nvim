{"properties": {"powershell.integratedConsole.useLegacyReadLine": {"description": "Falls back to the legacy ReadLine experience. This will disable the use of PSReadLine in the PowerShell Extension Terminal.", "type": "boolean", "default": false}, "powershell.pester.debugOutputVerbosity": {"description": "Defines the verbosity of output to be used when debugging a test or a block. For Pester 5 and newer the default value Diagnostic will print additional information about discovery, skipped and filtered tests, mocking and more.", "enum": ["None", "Minimal", "Normal", "Detailed", "Diagnostic"], "type": "string", "default": "Diagnostic"}, "powershell.powerShellAdditionalExePaths": {"description": "Specifies a list of versionName / exePath pairs where exePath points to a non-standard install location for PowerShell and versionName can be used to reference this path with the powershell.powerShellDefaultVersion setting.", "additionalProperties": {"type": "string"}, "type": "object"}, "powershell.pester.outputVerbosity": {"description": "Defines the verbosity of output to be used. For Pester 5 and newer the default value FromPreference, will use the Output settings from the $PesterPreference defined in the caller context, and will default to Normal if there is none. For Pester 4 the FromPreference and Normal options map to All, and Minimal option maps to Fails.", "enum": ["FromPreference", "None", "Minimal", "Normal", "Detailed", "Diagnostic"], "type": "string", "default": "FromPreference"}, "powershell.startAutomatically": {"description": "Starts PowerShell extension features automatically when a PowerShell file opens. If false, to start the extension, use the 'PowerShell: Restart Current Session' command. IntelliSense, code navigation, Extension Terminal, code formatting, and other features are not enabled until the extension starts.", "type": "boolean", "default": true}, "powershell.codeFolding.enable": {"description": "Enables syntax based code folding. When disabled, the default indentation based code folding is used.", "type": "boolean", "default": true}, "powershell.sideBar.CommandExplorerVisibility": {"description": "Specifies the visibility of the Command Explorer in the PowerShell Side Bar.", "type": "boolean", "default": true}, "powershell.codeFormatting.whitespaceBetweenParameters": {"description": "Removes redundant whitespace between parameters.", "type": "boolean", "default": false}, "powershell.bugReporting.project": {"description": "Specifies the URL of the GitHub project in which to generate bug reports.", "type": "string", "default": "https://github.com/PowerShell/vscode-powershell"}, "powershell.codeFolding.showLastLine": {"description": "Shows the last line of a folded section similar to the default VSCode folding style. When disabled, the entire folded region is hidden.", "type": "boolean", "default": true}, "powershell.developer.bundledModulesPath": {"description": "Specifies an alternate path to the folder containing modules that are bundled with the PowerShell extension (i.e. PowerShell Editor Services, PSScriptAnalyzer, Plaster)", "type": "string"}, "powershell.codeFormatting.autoCorrectAliases": {"description": "Replaces aliases with their aliased name.", "type": "boolean", "default": false}, "powershell.useX86Host": {"deprecationMessage": "This setting was removed when the PowerShell installation searcher was added. Please use the \"powershell.powerShellAdditionalExePaths\" setting instead.", "description": "REMOVED: Uses the 32-bit language service on 64-bit Windows. This setting has no effect on 32-bit Windows or on the PowerShell extension debugger, which has its own architecture configuration.", "type": "boolean", "default": false}, "powershell.developer.waitForSessionFileTimeoutSeconds": {"description": "When the PowerShell extension is starting up, it checks for a session file in order to connect to the language server. This setting determines how long until checking for the session file times out. (default is 240 seconds or 4 minutes)", "type": "number", "default": 240}, "powershell.helpCompletion": {"description": "Controls the comment-based help completion behavior triggered by typing '##'. Set the generated help style with 'BlockComment' or 'LineComment'. Disable the feature with 'Disabled'.", "enum": ["Disabled", "BlockComment", "LineComment"], "type": "string", "default": "BlockComment"}, "powershell.scriptAnalysis.enable": {"description": "Enables real-time script analysis from PowerShell Script Analyzer. Uses the newest installed version of the PSScriptAnalyzer module or the version bundled with this extension, if it is newer.", "type": "boolean", "default": true}, "powershell.codeFormatting.useCorrectCasing": {"description": "Use correct casing for cmdlets.", "type": "boolean", "default": false}, "powershell.codeFormatting.addWhitespaceAroundPipe": {"description": "Adds a space before and after the pipeline operator ('|') if it is missing.", "type": "boolean", "default": true}, "powershell.cwd": {"description": "An explicit start path where the PowerShell Extension Terminal will be launched. Both the PowerShell process and the shell's location will be set to this directory. Predefined variables can be used (i.e. ${fileDirname} to use the current opened file's directory).", "type": "string", "default": null}, "powershell.pester.useLegacyCodeLens": {"description": "Use a CodeLens that is compatible with Pester 4. Disabling this will show 'Run Tests' on all It, Describe and Context blocks, and will correctly work only with Pester 5 and newer.", "type": "boolean", "default": true}, "powershell.integratedConsole.showOnStartup": {"description": "Shows the Extension Terminal when the PowerShell extension is initialized. When disabled, the pane is not opened on startup, but the Extension Terminal is still created in order to power the extension's features.", "type": "boolean", "default": true}, "powershell.codeFormatting.newLineAfterOpenBrace": {"description": "Adds a newline (line break) after an open brace.", "type": "boolean", "default": true}, "powershell.sideBar.CommandExplorerExcludeFilter": {"description": "Specify array of Modules to exclude from Command Explorer listing.", "type": "array", "default": [], "items": {"type": "string"}}, "powershell.enableProfileLoading": {"description": "Loads user and system-wide PowerShell profiles (profile.ps1 and Microsoft.VSCode_profile.ps1) into the PowerShell session. This affects IntelliSense and interactive script execution, but it does not affect the debugger.", "type": "boolean", "default": true}, "powershell.codeFormatting.pipelineIndentationStyle": {"description": "Multi-line pipeline style settings (default: NoIndentation).", "enum": ["IncreaseIndentationForFirstPipeline", "IncreaseIndentationAfterEveryPipeline", "NoIndentation", "None"], "type": "string", "default": "NoIndentation"}, "powershell.codeFormatting.trimWhitespaceAroundPipe": {"description": "Trims extraneous whitespace (more than 1 character) before and after the pipeline operator ('|').", "type": "boolean", "default": false}, "powershell.codeFormatting.whitespaceAroundOperator": {"description": "Adds spaces before and after an operator ('=', '+', '-', etc.).", "type": "boolean", "default": true}, "powershell.codeFormatting.whitespaceAfterSeparator": {"description": "Adds a space after a separator (',' and ';').", "type": "boolean", "default": true}, "powershell.scriptAnalysis.settingsPath": {"description": "Specifies the path to a PowerShell Script Analyzer settings file. To override the default settings for all projects, enter an absolute path, or enter a path relative to your workspace.", "type": "string", "default": "PSScriptAnalyzerSettings.psd1"}, "powershell.integratedConsole.startInBackground": {"description": "Starts the Extension Terminal in the background. WARNING: If this is enabled, to access the terminal you must run the 'Show Extension Terminal' command, and once shown it cannot be put back into the background. This option completely hides the Extension Terminal from the terminals pane. You are probably looking for the 'showOnStartup' option instead.", "type": "boolean", "default": false}, "powershell.codeFormatting.alignPropertyValuePairs": {"description": "Align assignment statements in a hashtable or a DSC Configuration.", "type": "boolean", "default": true}, "powershell.developer.editorServicesLogLevel": {"description": "Sets the logging verbosity level for the PowerShell Editor Services host executable.  Valid values are 'Diagnostic', 'Verbose', 'Normal', 'Warning', 'Error', and 'None'", "enum": ["Diagnostic", "Verbose", "Normal", "Warning", "Error", "None"], "type": "string", "default": "Normal"}, "powershell.developer.editorServicesWaitForDebugger": {"description": "Launches the language service with the /waitForDebugger flag to force it to wait for a .NET debugger to attach before proceeding.", "type": "boolean", "default": false}, "powershell.promptToUpdatePowerShell": {"description": "Specifies whether you should be prompted to update your version of PowerShell.", "type": "boolean", "default": true}, "powershell.integratedConsole.focusConsoleOnExecute": {"description": "Switches focus to the console when a script selection is run or a script file is debugged. This is an accessibility feature. To disable it, set to false.", "type": "boolean", "default": true}, "powershell.codeFormatting.whitespaceBeforeOpenParen": {"description": "Adds a space between a keyword (if, elseif, while, switch, etc) and its associated conditional expression.", "type": "boolean", "default": true}, "powershell.codeFormatting.openBraceOnSameLine": {"description": "Places open brace on the same line as its associated statement.", "type": "boolean", "default": true}, "powershell.codeFormatting.whitespaceBeforeOpenBrace": {"description": "Adds a space between a keyword and its associated scriptblock expression.", "type": "boolean", "default": true}, "powershell.integratedConsole.forceClearScrollbackBuffer": {"description": "Use the vscode API to clear the terminal since that's the only reliable way to clear the scrollback buffer. Turn this on if you're used to 'Clear-Host' clearing scroll history as well as clear-terminal-via-lsp.", "type": "boolean"}, "powershell.codeFormatting.preset": {"description": "Sets the codeformatting options to follow the given indent style in a way that is compatible with PowerShell syntax. For more information about the brace styles please refer to https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81.", "enum": ["Custom", "Allman", "OTBS", "Stroustrup"], "type": "string", "default": "Custom"}, "powershell.codeFormatting.ignoreOneLineBlock": {"description": "Does not reformat one-line code blocks, such as \"if (...) {...} else {...}\".", "type": "boolean", "default": true}, "powershell.buttons.showPanelMovementButtons": {"description": "Show buttons in the editor title-bar for moving the panel around.", "type": "boolean", "default": false}, "powershell.promptToUpdatePackageManagement": {"deprecationMessage": "This prompt has been removed as it's no longer strictly necessary to upgrade the PackageManagement module.", "description": "REMOVED: Specifies whether you should be prompted to update your version of PackageManagement if it's under 1.4.6.", "type": "boolean", "default": false}, "powershell.startAsLoginShell.linux": {"description": "Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable.", "type": "boolean", "default": false}, "powershell.powerShellExePath": {"deprecationMessage": "Please use the \"powershell.powerShellAdditionalExePaths\" setting instead.", "description": "REMOVED: Please use the \"powershell.powerShellAdditionalExePaths\" setting instead.", "scope": "machine", "type": "string", "default": ""}, "powershell.codeFormatting.whitespaceInsideBrace": {"description": "Adds a space after an opening brace ('{') and before a closing brace ('}').", "type": "boolean", "default": true}, "powershell.enableReferencesCodeLens": {"description": "Displays a code lens above function definitions showing the number of times the function is referenced in the workspace. Large workspaces should disable this setting due to high performance impact.", "type": "boolean", "default": true}, "powershell.pester.codeLens": {"description": "This setting controls the appearance of the 'Run Tests' and 'Debug Tests' CodeLenses that appears above Pester tests.", "type": "boolean", "default": true}, "powershell.codeFormatting.newLineAfterCloseBrace": {"description": "Adds a newline (line break) after a closing brace.", "type": "boolean", "default": true}, "powershell.debugging.createTemporaryIntegratedConsole": {"description": "Determines whether a temporary PowerShell Extension Terminal is created for each debugging session. Useful for debugging PowerShell classes and binary modules.", "type": "boolean", "default": false}, "powershell.codeFormatting.whitespaceAroundPipe": {"deprecationMessage": "Please use the \"powershell.codeFormatting.addWhitespaceAroundPipe\" setting instead. If you've used this setting before, we have moved it for you automatically.", "description": "REMOVED. Please use the \"powershell.codeFormatting.addWhitespaceAroundPipe\" setting instead. If you've used this setting before, we have moved it for you automatically.", "type": "boolean", "default": true}, "powershell.buttons.showRunButtons": {"description": "Show the Run and Run Selection buttons in the editor title-bar.", "type": "boolean", "default": true}, "powershell.powerShellDefaultVersion": {"description": "Specifies the PowerShell version name, as displayed by the 'PowerShell: Show Session Menu' command, used when the extension loads e.g \"Windows PowerShell (x86)\" or \"PowerShell Core 7 (x64)\". You can specify additional PowerShell executables by using the \"powershell.powerShellAdditionalExePaths\" setting.", "type": "string"}, "powershell.codeFormatting.useConstantStrings": {"description": "Use single quotes if a string is not interpolated and its value does not contain a single quote.", "type": "boolean", "default": false}, "powershell.developer.featureFlags": {"description": "An array of strings that enable experimental features in the PowerShell extension.", "type": "array", "default": [], "items": {"type": "string"}}, "powershell.startAsLoginShell.osx": {"description": "Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable.", "type": "boolean", "default": true}, "powershell.integratedConsole.suppressStartupBanner": {"description": "Do not show the Powershell Extension Terminal banner on launch", "type": "boolean", "default": false}}, "description": "Develop PowerShell modules, commands and scripts in Visual Studio Code!", "$schema": "http://json-schema.org/draft-07/schema#"}