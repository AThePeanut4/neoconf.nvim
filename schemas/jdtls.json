{"properties":{"java.jdt.ls.java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. \n\nOn Windows, backslashes must be escaped, i.e.\n\"java.jdt.ls.java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","scope":"machine-overridable"},"java.home":{"deprecationMessage":"This setting is deprecated, please use 'java.jdt.ls.java.home' instead.","description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","type":["string","null"],"default":null,"scope":"machine-overridable"},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:jni+resolve=off","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:jni+resolve=off` to optimize memory usage with the parallel garbage collector","scope":"machine-overridable"},"java.configuration.runtimes":{"description":"Map Java Execution Environments to local JDKs.","items":{"required":["path","name"],"type":"object","default":{},"additionalProperties":false,"properties":{"javadoc":{"type":"string","description":"JDK javadoc path."},"sources":{"type":"string","description":"JDK sources path."},"name":{"type":"string","description":"Java Execution Environment name. Must be unique.","enum":["J2SE-1.5","JavaSE-1.6","JavaSE-1.7","JavaSE-1.8","JavaSE-9","JavaSE-10","JavaSE-11","JavaSE-12","JavaSE-13","JavaSE-14","JavaSE-15","JavaSE-16","JavaSE-17","JavaSE-18","JavaSE-19"]},"default":{"type":"boolean","description":"Is default runtime? Only one runtime can be default."},"path":{"type":"string","pattern":".*(?<!\\\/bin|\\\/bin\\\/|\\\\bin|\\\\bin\\\\)$","description":"JDK home path. Should be the JDK installation directory, not the Java bin path.\n On Windows, backslashes must be escaped, i.e.\n\"path\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"."}}},"type":"array","default":[],"scope":"machine-overridable"},"java.import.gradle.java.home":{"type":"string","default":null,"description":"The location to the JVM used to run the Gradle daemon.","scope":"machine-overridable"},"java.server.launchMode":{"enum":["Standard","LightWeight","Hybrid"],"description":"The launch mode for the Java extension","enumDescriptions":["Provides full features such as intellisense, refactoring, building, Maven\/Gradle support etc.","Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.","Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready."],"type":"string","default":"Hybrid","scope":"window"},"java.jdt.ls.protobufSupport.enabled":{"type":"boolean","default":true,"scope":"window","markdownDescription":"Specify whether to automatically add Protobuf output source directories to the classpath.\n\n**Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher."},"java.sources.organizeImports.starThreshold":{"description":"Specifies the number of imports added before a star-import declaration is used.","type":"integer","default":99,"scope":"window","minimum":1},"java.sources.organizeImports.staticStarThreshold":{"description":"Specifies the number of static imports added before a star-import declaration is used.","type":"integer","default":99,"scope":"window","minimum":1},"java.imports.gradle.wrapper.checksums":{"description":"Defines allowed\/disallowed SHA-256 checksums of Gradle Wrappers","items":{"required":["sha256"],"uniqueItems":true,"type":"object","default":{},"additionalProperties":false,"properties":{"allowed":{"type":"boolean","default":true,"label":"Is allowed?"},"sha256":{"type":"string","label":"SHA-256 checksum."}}},"type":"array","default":[],"scope":"application"},"java.import.gradle.user.home":{"type":"string","default":null,"description":"Setting for GRADLE_USER_HOME.","scope":"window"},"java.project.importOnFirstTimeStartup":{"enum":["disabled","interactive","automatic"],"description":"Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.","type":"string","default":"automatic","scope":"application"},"java.maven.downloadSources":{"type":"boolean","default":false,"description":"Enable\/disable download of Maven source artifacts as part of importing Maven projects.","scope":"window"},"java.project.importHint":{"type":"boolean","default":true,"description":"Enable\/disable the server-mode switch information, when Java projects import is skipped on startup.","scope":"application"},"java.eclipse.downloadSources":{"type":"boolean","default":false,"description":"Enable\/disable download of Maven source artifacts for Eclipse projects.","scope":"window"},"java.project.resourceFilters":{"type":"array","default":["node_modules",".git"],"description":"Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, [\"node_modules\",\".git\"] will exclude all files and folders named 'node_modules' or '.git'. Defaults to [\"node_modules\",\".git\"].","scope":"window"},"java.maven.updateSnapshots":{"type":"boolean","default":false,"description":"Force update of Snapshots\/Releases.","scope":"window"},"java.templates.fileHeader":{"type":"array","default":[],"scope":"window","markdownDescription":"Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables)."},"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable\/disable the references code lens.","scope":"window"},"java.templates.typeComment":{"type":"array","default":[],"scope":"window","markdownDescription":"Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables)."},"java.signatureHelp.enabled":{"type":"boolean","default":true,"description":"Enable\/disable the signature help.","scope":"window"},"java.references.includeAccessors":{"type":"boolean","default":true,"description":"Include getter, setter and builder\/constructor when finding references.","scope":"window"},"java.signatureHelp.description.enabled":{"type":"boolean","default":false,"description":"Enable\/disable to show the description in signature help.","scope":"window"},"java.references.includeDecompiledSources":{"type":"boolean","default":true,"description":"Include the decompiled sources when finding references.","scope":"window"},"java.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable\/disable the implementations code lens.","scope":"window"},"java.typeHierarchy.lazyLoad":{"type":"boolean","default":false,"description":"Enable\/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.","scope":"window"},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Path to Maven's user settings.xml","scope":"window"},"java.settings.url":{"type":"string","default":null,"scope":"window","markdownDescription":"Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https:\/\/github.com\/redhat-developer\/vscode-java\/wiki\/Settings-Global-Preferences)"},"java.configuration.maven.globalSettings":{"type":"string","default":null,"description":"Path to Maven's global settings.xml","scope":"window"},"java.symbols.includeSourceMethodDeclarations":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Include method declarations from source files in symbol search."},"java.configuration.maven.notCoveredPluginExecutionSeverity":{"enum":["ignore","warning","error"],"description":"Specifies severity if the plugin execution is not covered by Maven build lifecycle.","type":"string","default":"warning","scope":"window"},"java.errors.incompleteClasspath.severity":{"enum":["ignore","info","warning","error"],"description":"Specifies the severity of the message when the classpath is incomplete for a Java file","type":["string"],"default":"warning","scope":"window"},"java.configuration.workspaceCacheLimit":{"description":"The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.","type":["null","integer"],"default":90,"scope":"application","minimum":1},"java.configuration.checkProjectSettingsExclusions":{"deprecationMessage":"Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.","description":"Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings\/) from the file explorer.","type":"boolean","default":false,"scope":"window"},"java.inlayHints.parameterNames.enabled":{"enum":["none","literals","all"],"enumDescriptions":["Disable parameter name hints","Enable parameter name hints only for literal arguments","Enable parameter name hints for literal and non-literal arguments"],"type":"string","default":"literals","scope":"window","markdownDescription":"Enable\/disable inlay hints for parameter names:\n```java\n\nInteger.valueOf(\/* s: *\/ '123', \/* radix: *\/ 10)\n \n```\n `#java.inlayHints.parameterNames.exclusions#` can be used to disable the inlay hints for methods."},"java.format.enabled":{"type":"boolean","default":true,"description":"Enable\/disable default Java formatter","scope":"window"},"java.configuration.updateBuildConfiguration":{"enum":["disabled","interactive","automatic"],"description":"Specifies how modifications on build files update the Java classpath\/configuration","type":["string"],"default":"interactive","scope":"window"},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable\/disable auto organize imports on save action","scope":"window"},"java.trace.server":{"enum":["off","messages","verbose"],"description":"Traces the communication between VS Code and the Java language server.","type":"string","default":"off","scope":"window"},"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable\/disable the Maven importer.","scope":"window"},"java.import.maven.offline.enabled":{"type":"boolean","default":false,"description":"Enable\/disable the Maven offline mode.","scope":"window"},"java.import.generatesMetadataFilesAtProjectRoot":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Specify whether the project metadata files(.project, .classpath, .factorypath, .settings\/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect."},"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable\/disable the Gradle importer.","scope":"window"},"java.project.referencedLibraries":{"required":["include"],"description":"Configure glob patterns for referencing local libraries to a Java project.","scope":"window","type":["array","object"],"default":["lib\/**\/*.jar"],"additionalProperties":false,"properties":{"exclude":{"type":"array"},"include":{"type":"array"},"sources":{"type":"object"}}},"java.import.gradle.wrapper.enabled":{"type":"boolean","default":true,"description":"Use Gradle from the 'gradle-wrapper.properties' file.","scope":"window"},"java.format.settings.url":{"type":"string","default":null,"scope":"window","markdownDescription":"Specifies the url or file path to the [Eclipse formatter xml settings](https:\/\/github.com\/redhat-developer\/vscode-java\/wiki\/Formatter-settings)."},"java.project.outputPath":{"type":["string","null"],"default":"","scope":"window","markdownDescription":"A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project."},"java.format.settings.profile":{"type":"string","default":null,"description":"Optional formatter profile name from the Eclipse formatter settings.","scope":"window"},"java.project.sourcePaths":{"items":{"type":"string"},"type":"array","default":[],"scope":"window","markdownDescription":"Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project."},"java.format.comments.enabled":{"type":"boolean","default":true,"description":"Includes the comments during code formatting.","scope":"window"},"java.contentProvider.preferred":{"type":"string","default":null,"description":"Preferred content provider (a 3rd party decompiler id, usually)","scope":"window"},"java.import.gradle.offline.enabled":{"type":"boolean","default":false,"description":"Enable\/disable the Gradle offline mode.","scope":"window"},"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable\/disable the 'auto build'","scope":"window"},"java.import.gradle.arguments":{"type":"string","default":null,"description":"Arguments to pass to Gradle.","scope":"machine"},"java.maxConcurrentBuilds":{"description":"Max simultaneous project builds","type":"integer","default":1,"scope":"window","minimum":1},"java.import.gradle.jvmArguments":{"type":"string","default":null,"description":"JVM arguments to pass to Gradle.","scope":"machine"},"java.recommendations.dependency.analytics.show":{"type":"boolean","default":true,"description":"Show the recommended Dependency Analytics extension.","scope":"window"},"java.codeGeneration.useBlocks":{"type":"boolean","default":false,"description":"Use blocks in 'if' statements when generating the methods.","scope":"window"},"java.completion.maxResults":{"type":"integer","default":0,"scope":"window","markdownDescription":"Maximum number of completion results (not including snippets).\n`0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit."},"java.codeGeneration.generateComments":{"type":"boolean","default":false,"description":"Generate method comments when generating the methods.","scope":"window"},"java.completion.enabled":{"type":"boolean","default":true,"description":"Enable\/disable code completion support","scope":"window"},"java.codeGeneration.toString.template":{"type":"string","default":"${object.className} [${member.name()}=${member.value}, ${otherMembers}]","description":"The template for generating the toString method."},"java.completion.guessMethodArguments":{"type":"boolean","default":true,"description":"When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.","scope":"window"},"java.completion.favoriteStaticMembers":{"type":"array","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*","org.mockito.Mockito.*","org.mockito.ArgumentMatchers.*","org.mockito.Answers.*"],"description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","scope":"window"},"java.codeAction.sortMembers.avoidVolatileChanges":{"type":"boolean","default":true,"description":"Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.","scope":"window"},"java.jdt.ls.androidSupport.enabled":{"enum":["auto","on","off"],"type":"string","default":"auto","scope":"window","markdownDescription":"[Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.\n\n**Note:** Only works for Android Gradle Plugin `3.2.0` or higher."},"java.jdt.ls.lombokSupport.enabled":{"type":"boolean","default":true,"description":"Whether to load lombok processors from project classpath","scope":"window"},"java.project.encoding":{"enum":["ignore","warning","setDefault"],"enumDescriptions":["Ignore project encoding settings","Show warning if a project has no explicit encoding set","Set the default workspace encoding settings"],"default":"ignore","scope":"window","markdownDescription":"Project encoding settings"},"java.inlayHints.parameterNames.exclusions":{"items":{"type":"string"},"type":"array","default":[],"scope":"window","markdownDescription":"The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:\n - `java.lang.Math.*` - All the methods from java.lang.Math.\n - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.\n - `*.println(*)` - Methods named as 'println'.\n - `(from, to)` - Methods with two parameters named as 'from' and 'to'.\n - `(arg*)` - Methods with one parameter whose name starts with 'arg'."},"java.quickfix.showAt":{"enum":["line","problem"],"description":"Show quickfixes at the problem or line level.","type":"string","default":"line","scope":"window"},"java.import.exclusions":{"type":"array","default":["**\/node_modules\/**","**\/.metadata\/**","**\/archetype-resources\/**","**\/META-INF\/maven\/**"],"description":"Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.","scope":"window"},"java.codeGeneration.toString.skipNullValues":{"type":"boolean","default":false,"description":"Skip null values when generating the toString method.","scope":"window"},"java.format.onType.enabled":{"type":"boolean","default":true,"description":"Enable\/disable automatic block formatting when typing `;`, `<enter>` or `}`","scope":"window"},"java.codeGeneration.toString.listArrayContents":{"type":"boolean","default":true,"description":"List contents of arrays instead of using native toString().","scope":"window"},"java.foldingRange.enabled":{"type":"boolean","default":true,"description":"Enable\/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.","scope":"window"},"java.codeGeneration.toString.limitElements":{"type":"integer","default":0,"description":"Limit number of items in arrays\/collections\/maps to list, if 0 then list all.","scope":"window"},"java.progressReports.enabled":{"type":"boolean","default":true,"description":"[Experimental] Enable\/disable progress reports from background processes on the server.","scope":"window"},"java.codeGeneration.insertionLocation":{"enum":["afterCursor","beforeCursor","lastMember"],"description":"Specifies the insertion location of the code generated by source actions.","enumDescriptions":["Insert the generated code after the member where the cursor is located.","Insert the generated code before the member where the cursor is located.","Insert the generated code as the last member of the target type."],"type":"string","default":"afterCursor","scope":"window"},"java.codeGeneration.hashCodeEquals.useJava7Objects":{"type":"boolean","default":false,"description":"Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.","scope":"window"},"java.codeGeneration.hashCodeEquals.useInstanceof":{"type":"boolean","default":false,"description":"Use 'instanceof' to compare types when generating the hashCode and equals methods.","scope":"window"},"java.codeGeneration.toString.codeStyle":{"enum":["STRING_CONCATENATION","STRING_BUILDER","STRING_BUILDER_CHAINED","STRING_FORMAT"],"description":"The code style for generating the toString method.","enumDescriptions":["String concatenation","StringBuilder\/StringBuffer","StringBuilder\/StringBuffer - chained call","String.format\/MessageFormat"],"type":"string","default":"STRING_CONCATENATION"},"java.completion.importOrder":{"type":"array","default":["java","javax","org","com"],"description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group.","scope":"window"},"java.completion.filteredTypes":{"type":"array","default":["java.awt.*","com.sun.*","sun.*","jdk.*","org.graalvm.*","io.micrometer.shaded.*"],"description":"Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.","scope":"window"},"java.import.gradle.home":{"type":"string","default":null,"description":"Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.","scope":"window"},"java.import.gradle.version":{"type":"string","default":null,"description":"Use Gradle from the specific version if the Gradle wrapper is missing or disabled.","scope":"window"},"java.selectionRange.enabled":{"type":"boolean","default":true,"description":"Enable\/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.","scope":"window"},"java.showBuildStatusOnStart.enabled":{"anyOf":[{"enum":["notification","terminal","off"],"enumDescriptions":["Show the build status via progress notification on start","Show the build status via terminal on start","Do not show any build status on start"]},"boolean"],"default":"notification","description":"Automatically show build status on startup.","scope":"window"}},"$schema":"http:\/\/json-schema.org\/draft-07\/schema#","description":"Java Linting, Intellisense, formatting, refactoring, Maven\/Gradle support and more..."}