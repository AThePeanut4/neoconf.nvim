{"properties":{"FSharp.recordStubGenerationBody":{"type":"string","default":"failwith \"Not Implemented\"","description":"The expression to fill in the right-hand side of record fields when generating missing fields for a record construction expression"},"FSharp.enableMSBuildProjectGraph":{"type":"boolean","default":false,"description":"EXPERIMENTAL. Enables support for loading workspaces with MsBuild's ProjectGraph. This can improve load times. Requires restart."},"FSharp.resolveNamespaces":{"type":"boolean","default":true,"description":"Enables a codefix that will suggest namespaces or module to open when a name is not recognized"},"FSharp.enableReferenceCodeLens":{"deprecationMessage":"This setting is deprecated. Use FSharp.codeLenses.references.enabled instead.","description":"Enables additional code lenses showing number of references of a function or value. Requires background services to be enabled.","type":"boolean","default":true,"markdownDeprecationMessage":"This setting is **deprecated**. Use `#FSharp.codeLenses.references.enabled#` instead."},"FSharp.saveOnSendLastSelection":{"type":"boolean","default":false,"description":"If enabled, the current file will be saved before sending the last selection to FSI for evaluation"},"FSharp.interfaceStubGeneration":{"type":"boolean","default":true,"description":"Enables a codefix that generates missing interface members when inside of an interface implementation expression"},"FSharp.showExplorerOnStartup":{"type":"boolean","default":true,"description":"Automatically shows solution explorer on plugin startup"},"FSharp.enableTouchBar":{"type":"boolean","default":true,"description":"Enables TouchBar integration of build\/run\/debug buttons"},"FSharp.showProjectExplorerIn":{"enum":["explorer","fsharp"],"description":"Set the activity (left bar) where the project explorer view will be displayed. If `explorer`, then the project explorer will be a collapsible tab in the main explorer view, a sibling to the file system explorer. If `fsharp`, a new activity with the F# logo will be added and the project explorer will be rendered in this activity.Requires restart.","type":"string","default":"fsharp","scope":"application"},"FSharp.enableTreeView":{"type":"boolean","default":true,"description":"Enables the solution explorer view of the current workspace, which shows the workspace as MSBuild sees it"},"FSharp.simplifyNameAnalyzer":{"type":"boolean","default":true,"description":"Enables detection of cases when names of functions and values can be simplified"},"FSharp.excludeProjectDirectories":{"type":"array","default":[".git","paket-files",".fable","packages","node_modules"],"description":"Directories in the array are excluded from project file search. Requires restart."},"FSharp.smartIndent":{"type":"boolean","default":false,"description":"Enables smart indent feature"},"FSharp.abstractClassStubGenerationObjectIdentifier":{"type":"string","default":"this","description":"The name of the 'self' identifier in an inherited member. For example, `this` in the expression `this.Member(x: int) = ()`"},"FSharp.suggestGitignore":{"type":"boolean","default":true,"description":"Allow Ionide to prompt whenever internal data files aren't included in your project's .gitignore"},"FSharp.externalAutocomplete":{"type":"boolean","default":false,"description":"Includes external (from unopened modules and namespaces) symbols in autocomplete"},"FSharp.suggestSdkScripts":{"type":"boolean","default":true,"description":"Allow Ionide to prompt to use SdkScripts"},"FSharp.fsac.attachDebugger":{"type":"boolean","default":false,"description":"Appends the '--attachdebugger' argument to fsac, this will allow you to attach a debugger."},"FSharp.trace.server":{"enum":["off","messages","verbose"],"description":"Trace server messages at the LSP protocol level for diagnostics.","type":"string","default":"off","scope":"window"},"FSharp.fsac.dotnetArgs":{"type":"array","default":[],"description":"additional CLI arguments to be provided to the dotnet runner for FSAC","items":{"type":"string"}},"FSharp.unionCaseStubGeneration":{"type":"boolean","default":true,"description":"Enables a codefix that generates missing union cases when in a match expression"},"FSharp.fsac.netCoreDllPath":{"type":"string","default":"","description":"The path to the 'fsautocomplete.dll', useful for debugging a self-built fsac.","scope":"machine-overridable"},"FSharp.unionCaseStubGenerationBody":{"type":"string","default":"failwith \"Not Implemented\"","description":"The expression to fill in the right-hand side of match cases when generating missing cases for a match on a discriminated union"},"FSharp.fsac.silencedLogs":{"type":"array","default":[],"description":"An array of log categories for FSAC to filter out. These can be found by viewing your log output and noting the text in between the brackets in the log line. For example, in the log line `[16:07:14.626 INF] [Compiler] done compiling foo.fsx`, the category is 'Compiler'. ","items":{"type":"string"}},"FSharp.unusedDeclarationsAnalyzer":{"type":"boolean","default":true,"description":"Enables detection of unused declarations"},"FSharp.fsiExtraParameters":{"type":"array","default":[],"markdownDescription":"An array of additional command line parameters to pass to FSI when it is started. See [the Microsoft documentation](https:\/\/docs.microsoft.com\/en-us\/dotnet\/fsharp\/language-reference\/fsharp-interactive-options) for an exhaustive list."},"FSharp.unusedOpensAnalyzer":{"type":"boolean","default":true,"description":"Enables detection of unused opens"},"FSharp.fsiFilePath":{"type":"string","default":"","description":"The path to the F# Interactive tool used by Ionide-FSharp (.NET Framework only, on .NET Core `FSharp.fsiSdkFilePath` is used)","scope":"machine-overridable"},"FSharp.useSdkScripts":{"type":"boolean","default":true,"description":"Use 'dotnet fsi' instead of 'fsi.exe'\/'fsharpi' to start an FSI session"},"FSharp.fsiSdkFilePath":{"type":"string","default":"","description":"The path to the F# Interactive tool used by Ionide-FSharp (When using .NET SDK scripts)","scope":"machine-overridable"},"FSharp.verboseLogging":{"type":"boolean","default":false,"description":"Logs additional information to F# output channel. This is equivalent to passing the `--verbose` flag to FSAC. Requires restart."},"FSharp.generateBinlog":{"type":"boolean","default":false,"markdownDescription":"Enables generation of `msbuild.binlog` files for project loading. It works only for fresh, non-cached project loading. Run `F#: Clear Project Cache` and reload window to force fresh loading of all projects. These files can be loaded and inspected using the [MSBuild Structured Logger](https:\/\/github.com\/KirillOsenkov\/MSBuildStructuredLog)"},"FSharp.workspaceModePeekDeepLevel":{"type":"integer","default":4,"description":"The deep level of directory hierarchy when searching for sln\/projects"},"FSharp.indentationSize":{"minimum":1,"default":4,"description":"The number of spaces used for indentation when generating code, e.g. for interface stubs","type":"number"},"FSharp.workspacePath":{"type":"string","description":"Path to the directory or solution file that should be loaded as a workspace. If set, no workspace probing or discovery is done by Ionide at all.","scope":"window"},"FSharp.infoPanelReplaceHover":{"type":"boolean","default":false,"description":"Controls whether the info panel replaces tooltips"},"FSharp.abstractClassStubGeneration":{"type":"boolean","default":true,"description":"Enables a codefix that generates missing members for an abstract class when in an type inheriting from that abstract class."},"FSharp.infoPanelShowOnStartup":{"type":"boolean","default":false,"description":"Controls whether the info panel should be displayed at startup"},"FSharp.abstractClassStubGenerationMethodBody":{"type":"string","default":"failwith \"Not Implemented\"","description":"The expression to fill in the right-hand side of inherited members when generating missing members for an abstract base class"},"FSharp.infoPanelStartLocked":{"type":"boolean","default":false,"description":"Controls whether the info panel should be locked at startup"},"FSharp.interfaceStubGenerationMethodBody":{"type":"string","default":"failwith \"Not Implemented\"","description":"The expression to fill in the right-hand side of interface members when generating missing members for an interface implementation expression"},"FSharp.infoPanelUpdate":{"enum":["onCursorMove","onHover","both","none"],"default":"onCursorMove","description":"Controls when the info panel is updated","type":"string"},"FSharp.interfaceStubGenerationObjectIdentifier":{"type":"string","default":"this","description":"The name of the 'self' identifier in an interface member. For example, `this` in the expression `this.Member(x: int) = ()`"},"FSharp.keywordsAutocomplete":{"type":"boolean","default":true,"description":"Includes keywords in autocomplete"},"FSharp.addFsiWatcher":{"type":"boolean","default":false,"description":"Enables a panel for FSI that shows the value of all existing bindings in the FSI session"},"FSharp.inlayHints.disableLongTooltip":{"type":"boolean","default":false,"description":"Hides the explanatory tooltip that appears on InlayHints to describe the different configuration toggles."},"FSharp.analyzersPath":{"type":"array","default":["packages\/Analyzers","analyzers"],"description":"Directories in the array are used as a source of custom analyzers. Requires restart.","scope":"machine-overridable"},"FSharp.inlayHints.enabled":{"type":"boolean","default":true,"description":"Controls if the inlay hints feature is enabled"},"FSharp.lineLens.prefix":{"type":"string","default":"  \/\/ ","description":"The prefix displayed before the signature in a LineLens"},"FSharp.inlayHints.parameterNames":{"type":"boolean","default":true,"description":"Controls if parameter-name inlay hints will be displayed for functions and methods"},"FSharp.autoRevealInExplorer":{"enum":["sameAsFileExplorer","enabled","disabled"],"description":"Controls whether the solution explorer should automatically reveal and select files when opening them. If `sameAsFileExplorer` is set, then the value of the `explorer.autoReveal` setting will be used instead.","type":"string","default":"sameAsFileExplorer","scope":"window"},"FSharp.inlayHints.typeAnnotations":{"type":"boolean","default":true,"description":"Controls if type-annotation inlay hints will be displayed for bindings."},"FSharp.lineLens.enabled":{"enum":["never","replaceCodeLens","always"],"default":"replaceCodeLens","description":"Usage mode for LineLens. If `never`, LineLens will never be shown.  If `replaceCodeLens`, LineLens will be placed in a decoration on top of the current line.","type":"string"},"FSharp.codeLenses.references.enabled":{"type":"boolean","default":true,"description":"If enabled, code lenses for reference counts for methods and functions will be shown."},"FSharp.linter":{"type":"boolean","default":true,"markdownDescription":"Enables integration with [FSharpLint](https:\/\/fsprojects.github.io\/FSharpLint\/) for additional (user-defined) warnings"},"FSharp.codeLenses.signature.enabled":{"type":"boolean","default":true,"description":"If enabled, code lenses for type signatures on methods and functions will be shown."},"FSharp.msbuildAutoshow":{"type":"boolean","default":false,"description":"Automatically shows the MSBuild output panel when MSBuild functionality is invoked"},"FSharp.disableFailedProjectNotifications":{"type":"boolean","default":false,"description":"Disables popup notifications for failed project loading"},"FSharp.pipelineHints.enabled":{"type":"boolean","default":true,"description":"Enables PipeLine hints, which are like LineLenses that appear along each step of a chain of piped expressions"},"FSharp.dotnetRoot":{"description":"Sets the root path for finding locating the dotnet CLI binary. Defaults to the `dotnet` binary found on your system PATH.","type":"string"},"FSharp.pipelineHints.prefix":{"type":"string","default":"  \/\/ ","description":"The prefix displayed before the signature"},"FSharp.enableAnalyzers":{"type":"boolean","default":false,"description":"EXPERIMENTAL. Enables F# analyzers for custom code diagnostics. Requires restart."},"FSharp.recordStubGeneration":{"type":"boolean","default":true,"description":"Enables a codefix that will generate missing record fields when inside a record construction expression"},"FSharp.enableBackgroundServices":{"type":"boolean","default":true,"description":"Enables background services responsible for creating symbol cache and typechecking files in the background. Requires restart."}},"$schema":"http:\/\/json-schema.org\/draft-07\/schema#","description":"F# Language Support, powered by FsAutoComplete"}