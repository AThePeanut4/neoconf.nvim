{"properties": {"FSharp.codeLenses.signature.enabled": {"description": "If enabled, code lenses for type signatures on methods and functions will be shown.", "type": "boolean", "default": true}, "FSharp.suggestGitignore": {"description": "Allow Ionide to prompt whenever internal data files aren't included in your project's .gitignore", "type": "boolean", "default": true}, "FSharp.infoPanelShowOnStartup": {"description": "Controls whether the info panel should be displayed at startup", "type": "boolean", "default": false}, "FSharp.showExplorerOnStartup": {"description": "Automatically shows solution explorer on plugin startup", "type": "boolean", "default": true}, "FSharp.unionCaseStubGeneration": {"description": "Enables a codefix that generates missing union cases when in a match expression", "type": "boolean", "default": true}, "FSharp.enableReferenceCodeLens": {"deprecationMessage": "This setting is deprecated. Use FSharp.codeLenses.references.enabled instead.", "description": "Enables additional code lenses showing number of references of a function or value. Requires background services to be enabled.", "type": "boolean", "default": true, "markdownDeprecationMessage": "This setting is **deprecated**. Use `#FSharp.codeLenses.references.enabled#` instead."}, "FSharp.generateBinlog": {"type": "boolean", "markdownDescription": "Enables generation of `msbuild.binlog` files for project loading. It works only for fresh, non-cached project loading. Run `F#: Clear Project Cache` and reload window to force fresh loading of all projects. These files can be loaded and inspected using the [MSBuild Structured Logger](https://github.com/KirillOsenkov/MSBuildStructuredLog)", "default": false}, "FSharp.abstractClassStubGeneration": {"description": "Enables a codefix that generates missing members for an abstract class when in an type inheriting from that abstract class.", "type": "boolean", "default": true}, "FSharp.enableAnalyzers": {"description": "EXPERIMENTAL. Enables F# analyzers for custom code diagnostics. Requires restart.", "type": "boolean", "default": false}, "FSharp.analyzersPath": {"description": "Directories in the array are used as a source of custom analyzers. Requires restart.", "scope": "machine-overridable", "type": "array", "default": ["packages/Analyzers", "analyzers"]}, "FSharp.dotnetRoot": {"description": "Sets the root path for finding locating the dotnet CLI binary. Defaults to the `dotnet` binary found on your system PATH.", "type": "string"}, "FSharp.unusedOpensAnalyzer": {"description": "Enables detection of unused opens", "type": "boolean", "default": true}, "FSharp.inlayHints.typeAnnotations": {"description": "Controls if type-annotation inlay hints will be displayed for bindings.", "type": "boolean", "default": true}, "FSharp.inlayHints.enabled": {"description": "Controls if the inlay hints feature is enabled", "type": "boolean", "default": true}, "FSharp.recordStubGeneration": {"description": "Enables a codefix that will generate missing record fields when inside a record construction expression", "type": "boolean", "default": true}, "FSharp.msbuildAutoshow": {"description": "Automatically shows the MSBuild output panel when MSBuild functionality is invoked", "type": "boolean", "default": false}, "FSharp.unusedDeclarationsAnalyzer": {"description": "Enables detection of unused declarations", "type": "boolean", "default": true}, "FSharp.abstractClassStubGenerationObjectIdentifier": {"description": "The name of the 'self' identifier in an inherited member. For example, `this` in the expression `this.Member(x: int) = ()`", "type": "string", "default": "this"}, "FSharp.fsac.attachDebugger": {"description": "Appends the '--attachdebugger' argument to fsac, this will allow you to attach a debugger.", "type": "boolean", "default": false}, "FSharp.disableFailedProjectNotifications": {"description": "Disables popup notifications for failed project loading", "type": "boolean", "default": false}, "FSharp.infoPanelReplaceHover": {"description": "Controls whether the info panel replaces tooltips", "type": "boolean", "default": false}, "FSharp.fsiExtraParameters": {"type": "array", "markdownDescription": "An array of additional command line parameters to pass to FSI when it is started. See [the Microsoft documentation](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/fsharp-interactive-options) for an exhaustive list.", "default": []}, "FSharp.recordStubGenerationBody": {"description": "The expression to fill in the right-hand side of record fields when generating missing fields for a record construction expression", "type": "string", "default": "failwith \"Not Implemented\""}, "FSharp.fsac.dotnetArgs": {"description": "additional CLI arguments to be provided to the dotnet runner for FSAC", "type": "array", "default": [], "items": {"type": "string"}}, "FSharp.fsiSdkFilePath": {"description": "The path to the F# Interactive tool used by Ionide-FSharp (When using .NET SDK scripts)", "scope": "machine-overridable", "type": "string", "default": ""}, "FSharp.infoPanelUpdate": {"description": "Controls when the info panel is updated", "enum": ["onCursorMove", "onHover", "both", "none"], "type": "string", "default": "onCursorMove"}, "FSharp.interfaceStubGenerationMethodBody": {"description": "The expression to fill in the right-hand side of interface members when generating missing members for an interface implementation expression", "type": "string", "default": "failwith \"Not Implemented\""}, "FSharp.fsiFilePath": {"description": "The path to the F# Interactive tool used by Ionide-FSharp (.NET Framework only, on .NET Core `FSharp.fsiSdkFilePath` is used)", "scope": "machine-overridable", "type": "string", "default": ""}, "FSharp.fsac.netCoreDllPath": {"description": "The path to the 'fsautocomplete.dll', useful for debugging a self-built fsac.", "scope": "machine-overridable", "type": "string", "default": ""}, "FSharp.enableTouchBar": {"description": "Enables TouchBar integration of build/run/debug buttons", "type": "boolean", "default": true}, "FSharp.enableBackgroundServices": {"description": "Enables background services responsible for creating symbol cache and typechecking files in the background. Requires restart.", "type": "boolean", "default": true}, "FSharp.interfaceStubGeneration": {"description": "Enables a codefix that generates missing interface members when inside of an interface implementation expression", "type": "boolean", "default": true}, "FSharp.externalAutocomplete": {"description": "Includes external (from unopened modules and namespaces) symbols in autocomplete", "type": "boolean", "default": false}, "FSharp.excludeProjectDirectories": {"description": "Directories in the array are excluded from project file search. Requires restart.", "type": "array", "default": [".git", "paket-files", ".fable", "packages", "node_modules"]}, "FSharp.useSdkScripts": {"description": "Use 'dotnet fsi' instead of 'fsi.exe'/'fsharpi' to start an FSI session", "type": "boolean", "default": true}, "FSharp.simplifyNameAnalyzer": {"description": "Enables detection of cases when names of functions and values can be simplified", "type": "boolean", "default": true}, "FSharp.linter": {"type": "boolean", "markdownDescription": "Enables integration with [FSharpLint](https://fsprojects.github.io/FSharpLint/) for additional (user-defined) warnings", "default": true}, "FSharp.enableMSBuildProjectGraph": {"description": "EXPERIMENTAL. Enables support for loading workspaces with MsBuild's ProjectGraph. This can improve load times. Requires restart.", "type": "boolean", "default": false}, "FSharp.lineLens.prefix": {"description": "The prefix displayed before the signature in a LineLens", "type": "string", "default": "  // "}, "FSharp.resolveNamespaces": {"description": "Enables a codefix that will suggest namespaces or module to open when a name is not recognized", "type": "boolean", "default": true}, "FSharp.addFsiWatcher": {"description": "Enables a panel for FSI that shows the value of all existing bindings in the FSI session", "type": "boolean", "default": false}, "FSharp.infoPanelStartLocked": {"description": "Controls whether the info panel should be locked at startup", "type": "boolean", "default": false}, "FSharp.interfaceStubGenerationObjectIdentifier": {"description": "The name of the 'self' identifier in an interface member. For example, `this` in the expression `this.Member(x: int) = ()`", "type": "string", "default": "this"}, "FSharp.saveOnSendLastSelection": {"description": "If enabled, the current file will be saved before sending the last selection to FSI for evaluation", "type": "boolean", "default": false}, "FSharp.verboseLogging": {"description": "Logs additional information to F# output channel. This is equivalent to passing the `--verbose` flag to FSAC. Requires restart.", "type": "boolean", "default": false}, "FSharp.smartIndent": {"description": "Enables smart indent feature", "type": "boolean", "default": false}, "FSharp.trace.server": {"description": "Trace server messages at the LSP protocol level for diagnostics.", "enum": ["off", "messages", "verbose"], "scope": "window", "type": "string", "default": "off"}, "FSharp.enableTreeView": {"description": "Enables the solution explorer view of the current workspace, which shows the workspace as MSBuild sees it", "type": "boolean", "default": true}, "FSharp.autoRevealInExplorer": {"description": "Controls whether the solution explorer should automatically reveal and select files when opening them. If `sameAsFileExplorer` is set, then the value of the `explorer.autoReveal` setting will be used instead.", "enum": ["sameAsFileExplorer", "enabled", "disabled"], "scope": "window", "type": "string", "default": "sameAsFileExplorer"}, "FSharp.unionCaseStubGenerationBody": {"description": "The expression to fill in the right-hand side of match cases when generating missing cases for a match on a discriminated union", "type": "string", "default": "failwith \"Not Implemented\""}, "FSharp.codeLenses.references.enabled": {"description": "If enabled, code lenses for reference counts for methods and functions will be shown.", "type": "boolean", "default": true}, "FSharp.fsac.silencedLogs": {"description": "An array of log categories for FSAC to filter out. These can be found by viewing your log output and noting the text in between the brackets in the log line. For example, in the log line `[16:07:14.626 INF] [Compiler] done compiling foo.fsx`, the category is 'Compiler'. ", "type": "array", "default": [], "items": {"type": "string"}}, "FSharp.showProjectExplorerIn": {"description": "Set the activity (left bar) where the project explorer view will be displayed. If `explorer`, then the project explorer will be a collapsible tab in the main explorer view, a sibling to the file system explorer. If `fsharp`, a new activity with the F# logo will be added and the project explorer will be rendered in this activity.Requires restart.", "enum": ["explorer", "fsharp"], "scope": "application", "type": "string", "default": "fsharp"}, "FSharp.keywordsAutocomplete": {"description": "Includes keywords in autocomplete", "type": "boolean", "default": true}, "FSharp.workspaceModePeekDeepLevel": {"description": "The deep level of directory hierarchy when searching for sln/projects", "type": "integer", "default": 4}, "FSharp.workspacePath": {"description": "Path to the directory or solution file that should be loaded as a workspace. If set, no workspace probing or discovery is done by Ionide at all.", "scope": "window", "type": "string"}, "FSharp.indentationSize": {"minimum": 1, "description": "The number of spaces used for indentation when generating code, e.g. for interface stubs", "type": "number", "default": 4}, "FSharp.lineLens.enabled": {"description": "Usage mode for LineLens. If `never`, LineLens will never be shown.  If `replaceCodeLens`, LineLens will be placed in a decoration on top of the current line.", "enum": ["never", "replaceCodeLens", "always"], "type": "string", "default": "replaceCodeLens"}, "FSharp.inlayHints.disableLongTooltip": {"description": "Hides the explanatory tooltip that appears on InlayHints to describe the different configuration toggles.", "type": "boolean", "default": false}, "FSharp.inlayHints.parameterNames": {"description": "Controls if parameter-name inlay hints will be displayed for functions and methods", "type": "boolean", "default": true}, "FSharp.suggestSdkScripts": {"description": "Allow Ionide to prompt to use SdkScripts", "type": "boolean", "default": true}, "FSharp.pipelineHints.enabled": {"description": "Enables PipeLine hints, which are like LineLenses that appear along each step of a chain of piped expressions", "type": "boolean", "default": true}, "FSharp.abstractClassStubGenerationMethodBody": {"description": "The expression to fill in the right-hand side of inherited members when generating missing members for an abstract base class", "type": "string", "default": "failwith \"Not Implemented\""}, "FSharp.pipelineHints.prefix": {"description": "The prefix displayed before the signature", "type": "string", "default": "  // "}}, "description": "F# Language Support, powered by FsAutoComplete", "$schema": "http://json-schema.org/draft-07/schema#"}