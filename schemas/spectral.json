{"properties": {"spectral.rulesetFile": {"description": "Location of the ruleset file to use when validating. If omitted, the default is a .spectral.yml/.spectral.json in the same folder as the document being validated. Paths are relative to the workspace.", "scope": "resource", "type": "string"}, "spectral.validateLanguages": {"description": "An array of language IDs which should be validated by Spectral. If file globs are also specified, the file must match both in order to be validated.", "scope": "resource", "type": "array", "default": ["json", "yaml"], "items": {"type": "string"}}, "spectral.enable": {"description": "Controls whether or not Spectral is enabled.", "scope": "resource", "type": "boolean", "default": true}, "spectral.run": {"description": "Run the linter on save (onSave) or as you type (onType).", "enum": ["onSave", "onType"], "scope": "resource", "type": "string", "default": "onType"}, "spectral.trace.server": {"description": "Traces the communication between VS Code and the language server.", "enum": ["off", "messages", "verbose"], "scope": "window", "type": "string", "default": "off"}, "spectral.validateFiles": {"description": "An array of file globs (e.g., `**/*.yaml`) in minimatch glob format which should be validated by Spectral. If language identifiers are also specified, the file must match both in order to be validated.", "scope": "resource", "type": "array", "items": {"type": "string"}}}, "description": "JSON/YAML linter with OpenAPI and custom ruleset support.", "$schema": "http://json-schema.org/draft-07/schema#"}