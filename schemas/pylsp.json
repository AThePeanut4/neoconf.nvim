{"properties":{"pylsp.plugins.pycodestyle.exclude":{"description":"Exclude files or directories which match these patterns.","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.flake8.executable":{"type":"string","default":"flake8","description":"Path to the flake8 executable."},"pylsp.plugins.pycodestyle.filename":{"description":"When parsing directories, only check filenames matching these patterns.","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.flake8.filename":{"type":["string","null"],"default":null,"description":"Only check for filenames matching the patterns in this list."},"pylsp.plugins.pycodestyle.select":{"description":"Select errors and warnings","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.flake8.hangClosing":{"type":["boolean","null"],"default":null,"description":"Hang closing bracket instead of matching indentation of opening bracket's line."},"pylsp.plugins.pycodestyle.ignore":{"description":"Ignore errors and warnings","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.flake8.config":{"type":["string","null"],"default":null,"description":"Path to the config file that will be the authoritative config source."},"pylsp.plugins.pycodestyle.hangClosing":{"type":["boolean","null"],"default":null,"description":"Hang closing bracket instead of matching indentation of opening bracket's line."},"pylsp.plugins.flake8.enabled":{"type":"boolean","default":false,"description":"Enable or disable the plugin."},"pylsp.plugins.flake8.indentSize":{"type":["integer","null"],"default":null,"description":"Set indentation spaces."},"pylsp.plugins.pydocstyle.enabled":{"type":"boolean","default":false,"description":"Enable or disable the plugin."},"pylsp.plugins.flake8.perFileIgnores":{"type":["array"],"default":[],"description":"A pairing of filenames and violation codes that defines which violations to ignore in a particular file, for example: `[\"file_path.py:W305,W304\"]`).","items":{"type":"string"}},"pylsp.plugins.flake8.select":{"description":"List of errors and warnings to enable.","items":{"type":"string"},"type":["array","null"],"default":null,"uniqueItems":true},"pylsp.plugins.pydocstyle.addIgnore":{"description":"Ignore errors and warnings in addition to the specified convention.","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.jedi.extra_paths":{"type":"array","default":[],"description":"Define extra paths for jedi.Script.","items":{"type":"string"}},"pylsp.plugins.pydocstyle.addSelect":{"description":"Select errors and warnings in addition to the specified convention.","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.jedi.env_vars":{"type":["object","null"],"default":null,"description":"Define environment variables for jedi.Script and Jedi.names."},"pylsp.plugins.pydocstyle.ignore":{"description":"Ignore errors and warnings","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.jedi.environment":{"type":["string","null"],"default":null,"description":"Define environment for jedi.Script and Jedi.names."},"pylsp.plugins.pydocstyle.match":{"type":"string","default":"(?!test_).*\\.py","description":"Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."},"pylsp.plugins.jedi_completion.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_completion.include_params":{"type":"boolean","default":true,"description":"Auto-completes methods and classes with tabstops for each parameter."},"pylsp.plugins.pydocstyle.matchDir":{"type":"string","default":"[^\\.].*","description":"Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."},"pylsp.plugins.jedi_completion.include_class_objects":{"type":"boolean","default":true,"description":"Adds class objects as a separate completion item."},"pylsp.plugins.pylint.args":{"description":"Arguments to pass to pylint.","items":{"type":"string"},"type":"array","default":[],"uniqueItems":false},"pylsp.plugins.jedi_completion.include_function_objects":{"type":"boolean","default":true,"description":"Adds function objects as a separate completion item."},"pylsp.plugins.pylint.enabled":{"type":"boolean","default":false,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_completion.fuzzy":{"type":"boolean","default":false,"description":"Enable fuzzy when requesting autocomplete."},"pylsp.plugins.rope_completion.enabled":{"type":"boolean","default":false,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_completion.eager":{"type":"boolean","default":false,"description":"Resolve documentation and detail eagerly."},"pylsp.plugins.yapf.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_completion.resolve_at_most":{"type":"number","default":25,"description":"How many labels and snippets (at most) should be resolved?"},"pylsp.plugins.rope_completion.eager":{"type":"boolean","default":false,"description":"Resolve documentation and detail eagerly."},"pylsp.plugins.jedi_completion.cache_for":{"type":"array","default":["pandas","numpy","tensorflow","matplotlib"],"description":"Modules for which labels and snippets should be cached.","items":{"type":"string"}},"pylsp.rope.extensionModules":{"type":["null","string"],"default":null,"description":"Builtin and c-extension modules that are allowed to be imported and inspected by rope."},"pylsp.plugins.pylint.executable":{"type":["string","null"],"default":null,"description":"Executable to run pylint with. Enabling this will run pylint on unsaved files via stdin. Can slow down workflow. Only works with python3."},"pylsp.rope.ropeFolder":{"description":"The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all.","items":{"type":"string"},"type":["null","array"],"default":null,"uniqueItems":true},"pylsp.plugins.pyflakes.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.pydocstyle.select":{"description":"Select errors and warnings","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.jedi_definition.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_definition.follow_imports":{"type":"boolean","default":true,"description":"The goto call will follow imports."},"pylsp.plugins.pydocstyle.convention":{"type":["string","null"],"default":null,"description":"Choose the basic list of checked errors by specifying an existing convention.","enum":["pep257","numpy",null]},"pylsp.plugins.pycodestyle.indentSize":{"type":["integer","null"],"default":null,"description":"Set indentation spaces."},"pylsp.plugins.pycodestyle.maxLineLength":{"type":["number","null"],"default":null,"description":"Set maximum allowed line length."},"pylsp.plugins.jedi_definition.follow_builtin_imports":{"type":"boolean","default":true,"description":"If follow_imports is True will decide if it follow builtin imports."},"pylsp.plugins.pycodestyle.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_hover.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_references.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_signature_help.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_symbols.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.jedi_symbols.all_scopes":{"type":"boolean","default":true,"description":"If True lists the names of all scopes instead of only the module namespace."},"pylsp.configurationSources":{"description":"List of configuration sources to use.","items":{"type":"string","enum":["pycodestyle","pyflakes"]},"type":"array","default":["pycodestyle"],"uniqueItems":true},"pylsp.plugins.jedi_symbols.include_import_symbols":{"type":"boolean","default":true,"description":"If True includes symbols imported from other libraries."},"pylsp.plugins.flake8.ignore":{"type":"array","default":[],"description":"List of errors and warnings to ignore (or skip).","items":{"type":"string"}},"pylsp.plugins.mccabe.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.mccabe.threshold":{"type":"number","default":15,"description":"The minimum threshold that triggers warnings about cyclomatic complexity."},"pylsp.plugins.flake8.maxLineLength":{"type":["integer","null"],"default":null,"description":"Maximum allowed line length for the entirety of this run."},"pylsp.plugins.preload.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin."},"pylsp.plugins.preload.modules":{"description":"List of modules to import on startup","items":{"type":"string"},"type":"array","default":[],"uniqueItems":true},"pylsp.plugins.autopep8.enabled":{"type":"boolean","default":true,"description":"Enable or disable the plugin (disabling required to use `yapf`)."},"pylsp.plugins.flake8.exclude":{"type":"array","default":[],"description":"List of files or directories to exclude.","items":{"type":"string"}}},"$schema":"http:\/\/json-schema.org\/draft-07\/schema#","description":"This server can be configured using `workspace\/didChangeConfiguration` method. Each configuration option is described below:"}