{"properties": {"pylsp.plugins.flake8.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": false}, "pylsp.plugins.mccabe.threshold": {"description": "The minimum threshold that triggers warnings about cyclomatic complexity.", "type": "number", "default": 15}, "pylsp.plugins.jedi_completion.include_params": {"description": "Auto-completes methods and classes with tabstops for each parameter.", "type": "boolean", "default": true}, "pylsp.plugins.jedi_symbols.all_scopes": {"description": "If True lists the names of all scopes instead of only the module namespace.", "type": "boolean", "default": true}, "pylsp.plugins.jedi_completion.include_class_objects": {"description": "Adds class objects as a separate completion item.", "type": "boolean", "default": true}, "pylsp.plugins.flake8.hangClosing": {"description": "Hang closing bracket instead of matching indentation of opening bracket's line.", "type": ["boolean", "null"], "default": null}, "pylsp.plugins.flake8.maxLineLength": {"description": "Maximum allowed line length for the entirety of this run.", "type": ["integer", "null"], "default": null}, "pylsp.plugins.pydocstyle.match": {"description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'.", "type": "string", "default": "(?!test_).*\\.py"}, "pylsp.plugins.pycodestyle.indentSize": {"description": "Set indentation spaces.", "type": ["integer", "null"], "default": null}, "pylsp.plugins.flake8.exclude": {"description": "List of files or directories to exclude.", "type": "array", "default": [], "items": {"type": "string"}}, "pylsp.plugins.jedi_completion.fuzzy": {"description": "Enable fuzzy when requesting autocomplete.", "type": "boolean", "default": false}, "pylsp.rope.extensionModules": {"description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope.", "type": ["null", "string"], "default": null}, "pylsp.plugins.pydocstyle.addIgnore": {"description": "Ignore errors and warnings in addition to the specified convention.", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.pycodestyle.exclude": {"description": "Exclude files or directories which match these patterns.", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.yapf.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.pycodestyle.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.pydocstyle.select": {"description": "Select errors and warnings", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.flake8.config": {"description": "Path to the config file that will be the authoritative config source.", "type": ["string", "null"], "default": null}, "pylsp.plugins.jedi_definition.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.rope_completion.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": false}, "pylsp.plugins.pydocstyle.convention": {"description": "Choose the basic list of checked errors by specifying an existing convention.", "enum": ["pep257", "numpy", null], "type": ["string", "null"], "default": null}, "pylsp.plugins.flake8.perFileIgnores": {"description": "A pairing of filenames and violation codes that defines which violations to ignore in a particular file, for example: `[\"file_path.py:W305,W304\"]`).", "type": ["array"], "default": [], "items": {"type": "string"}}, "pylsp.plugins.pydocstyle.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": false}, "pylsp.plugins.jedi_definition.follow_builtin_imports": {"description": "If follow_imports is True will decide if it follow builtin imports.", "type": "boolean", "default": true}, "pylsp.plugins.pycodestyle.ignore": {"description": "Ignore errors and warnings", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.flake8.ignore": {"description": "List of errors and warnings to ignore (or skip).", "type": "array", "default": [], "items": {"type": "string"}}, "pylsp.plugins.pycodestyle.maxLineLength": {"description": "Set maximum allowed line length.", "type": ["number", "null"], "default": null}, "pylsp.plugins.jedi_completion.include_function_objects": {"description": "Adds function objects as a separate completion item.", "type": "boolean", "default": true}, "pylsp.plugins.pylint.args": {"description": "Arguments to pass to pylint.", "type": "array", "uniqueItems": false, "items": {"type": "string"}, "default": []}, "pylsp.plugins.pydocstyle.addSelect": {"description": "Select errors and warnings in addition to the specified convention.", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.autopep8.enabled": {"description": "Enable or disable the plugin (disabling required to use `yapf`).", "type": "boolean", "default": true}, "pylsp.plugins.jedi_hover.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.jedi_symbols.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.configurationSources": {"description": "List of configuration sources to use.", "type": "array", "uniqueItems": true, "items": {"enum": ["pycodestyle", "pyflakes"], "type": "string"}, "default": ["pycodestyle"]}, "pylsp.plugins.jedi_definition.follow_imports": {"description": "The goto call will follow imports.", "type": "boolean", "default": true}, "pylsp.plugins.flake8.executable": {"description": "Path to the flake8 executable.", "type": "string", "default": "flake8"}, "pylsp.plugins.jedi_symbols.include_import_symbols": {"description": "If True includes symbols imported from other libraries.", "type": "boolean", "default": true}, "pylsp.plugins.jedi.extra_paths": {"description": "Define extra paths for jedi.Script.", "type": "array", "default": [], "items": {"type": "string"}}, "pylsp.plugins.preload.modules": {"description": "List of modules to import on startup", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.rope_completion.eager": {"description": "Resolve documentation and detail eagerly.", "type": "boolean", "default": false}, "pylsp.plugins.jedi_references.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.pylint.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": false}, "pylsp.plugins.flake8.filename": {"description": "Only check for filenames matching the patterns in this list.", "type": ["string", "null"], "default": null}, "pylsp.plugins.preload.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.pycodestyle.select": {"description": "Select errors and warnings", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.flake8.select": {"description": "List of errors and warnings to enable.", "type": ["array", "null"], "uniqueItems": true, "items": {"type": "string"}, "default": null}, "pylsp.plugins.jedi_completion.resolve_at_most": {"description": "How many labels and snippets (at most) should be resolved?", "type": "number", "default": 25}, "pylsp.plugins.jedi.environment": {"description": "Define environment for jedi.Script and Jedi.names.", "type": ["string", "null"], "default": null}, "pylsp.plugins.jedi_signature_help.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.jedi_completion.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.mccabe.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.plugins.pydocstyle.ignore": {"description": "Ignore errors and warnings", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}, "pylsp.plugins.pyflakes.enabled": {"description": "Enable or disable the plugin.", "type": "boolean", "default": true}, "pylsp.rope.ropeFolder": {"description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all.", "type": ["null", "array"], "uniqueItems": true, "items": {"type": "string"}, "default": null}, "pylsp.plugins.pycodestyle.hangClosing": {"description": "Hang closing bracket instead of matching indentation of opening bracket's line.", "type": ["boolean", "null"], "default": null}, "pylsp.plugins.jedi_completion.eager": {"description": "Resolve documentation and detail eagerly.", "type": "boolean", "default": false}, "pylsp.plugins.pylint.executable": {"description": "Executable to run pylint with. Enabling this will run pylint on unsaved files via stdin. Can slow down workflow. Only works with python3.", "type": ["string", "null"], "default": null}, "pylsp.plugins.jedi_completion.cache_for": {"description": "Modules for which labels and snippets should be cached.", "type": "array", "default": ["pandas", "numpy", "tensorflow", "matplotlib"], "items": {"type": "string"}}, "pylsp.plugins.jedi.env_vars": {"description": "Define environment variables for jedi.Script and Jedi.names.", "type": ["object", "null"], "default": null}, "pylsp.plugins.pydocstyle.matchDir": {"description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot.", "type": "string", "default": "[^\\.].*"}, "pylsp.plugins.flake8.indentSize": {"description": "Set indentation spaces.", "type": ["integer", "null"], "default": null}, "pylsp.plugins.pycodestyle.filename": {"description": "When parsing directories, only check filenames matching these patterns.", "type": "array", "uniqueItems": true, "items": {"type": "string"}, "default": []}}, "description": "This server can be configured using `workspace/didChangeConfiguration` method. Each configuration option is described below:", "$schema": "http://json-schema.org/draft-07/schema#"}