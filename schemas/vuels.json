{"properties": {"vetur.trace.server": {"description": "Traces the communication between VS Code and Vue Language Server.", "enum": ["off", "messages", "verbose"], "type": "string", "default": "off"}, "vetur.validation.template": {"description": "Validate vue-html in <template> using eslint-plugin-vue", "type": "boolean", "default": true}, "vetur.format.options.tabSize": {"description": "Number of spaces per indentation level. Inherited by all formatters.", "type": "number", "default": 2}, "vetur.format.options.useTabs": {"description": "Use tabs for indentation. Inherited by all formatters.", "type": "boolean", "default": false}, "vetur.format.defaultFormatter.postcss": {"description": "Default formatter for <style lang='postcss'> region", "enum": ["none", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "postcss formatter using css parser from prettier"], "default": "prettier"}, "vetur.underline.refValue": {"description": "Enable underline `.value` when using composition API.", "type": "boolean", "default": true}, "vetur.format.defaultFormatter.less": {"description": "Default formatter for <style lang='less'> region", "enum": ["none", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "less formatter using postcss parser from prettier"], "default": "prettier"}, "vetur.validation.script": {"description": "Validate js/ts in <script>", "type": "boolean", "default": true}, "vetur.useWorkspaceDependencies": {"description": "Use dependencies from workspace. Support for TypeScript, Prettier, @starptech/prettyhtml, prettier-eslint, prettier-tslint, stylus-supremacy, @prettier/plugin-pug.", "scope": "application", "type": "boolean", "default": false}, "vetur.format.enable": {"description": "Enable/disable the Vetur document formatter.", "type": "boolean", "default": true}, "vetur.validation.style": {"description": "Validate css/scss/less/postcss in <style>", "type": "boolean", "default": true}, "vetur.format.defaultFormatterOptions": {"properties": {"js-beautify-html": {"description": "Options for js-beautify", "type": "object"}, "prettyhtml": {"properties": {"wrapAttributes": {"description": "Whether to wrap attributes", "type": "boolean", "default": false}, "printWidth": {"description": "Maximum amount of characters allowed per line", "type": "number", "default": 100}, "singleQuote": {"description": "Whether to use single quotes by default", "type": "boolean", "default": false}, "sortAttributes": {"description": "Whether to sort attributes", "type": "boolean", "default": false}}, "description": "Options for prettyhtml", "type": "object"}, "prettier": {"properties": {}, "description": "Global prettier config used by prettier formatter. Used by `prettier` and `prettier-eslint`.\n\nVetur will prefer a prettier config file at home directory if one exists.", "type": "object"}}, "description": "Options for all default formatters", "type": "object", "default": {"js-beautify-html": {"wrap_attributes": "force-expand-multiline"}, "prettyhtml": {"wrapAttributes": false, "printWidth": 100, "singleQuote": false, "sortAttributes": false}}}, "vetur.languageFeatures.updateImportOnFileMove": {"description": "Whether to automatic updating import path when rename or move a file", "type": "boolean", "default": true}, "vetur.format.scriptInitialIndent": {"description": "Whether to have initial indent for <script> region", "type": "boolean", "default": false}, "vetur.dev.vlsPath": {"description": "Path to vls for Vetur developers. There are two ways of using it. \n\n1. Clone vuejs/vetur from GitHub, build it and point it to the ABSOLUTE path of `/server`.\n2. `yarn global add vls` and point Vetur to the installed location (`yarn global dir` + node_modules/vls)", "scope": "machine", "type": "string"}, "vetur.validation.templateProps": {"description": "Validate props usage in <template> region. Show error/warning for not passing declared props to child components and show error for passing wrongly typed interpolation expressions", "type": "boolean", "default": false}, "vetur.ignoreProjectWarning": {"description": "Vetur will warn about not setup correctly for the project. You can disable it.", "scope": "application", "type": "boolean", "default": false}, "vetur.grammar.customBlocks": {"description": "Mapping from custom block tag name to language name. Used for generating grammar to support syntax highlighting for custom blocks.", "type": "object", "default": {"i18n": "json", "docs": "md"}}, "vetur.validation.interpolation": {"description": "Validate interpolations in <template> region using TypeScript language service", "type": "boolean", "default": true}, "vetur.languageFeatures.codeActions": {"description": "Whether to enable codeActions", "type": "boolean", "default": true}, "vetur.format.defaultFormatter.scss": {"description": "Default formatter for <style lang='scss'> region", "enum": ["none", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "scss formatter using scss parser from prettier"], "default": "prettier"}, "vetur.dev.logLevel": {"description": "Log level for VLS", "enum": ["INFO", "DEBUG"], "type": "string", "enumDescriptions": ["Only log info messages. This is the default.", "Log info and debug messages."], "default": "INFO"}, "vetur.completion.tagCasing": {"description": "Casing conversion for tag completion", "enum": ["initial", "kebab"], "type": "string", "enumDescriptions": ["use the key in `components: {...}` as is for tag completion and do not force any casing", "kebab-case completion for <my-tag>"], "default": "kebab"}, "vetur.format.defaultFormatter.css": {"description": "Default formatter for <style> region", "enum": ["none", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "css formatter using css parser from prettier"], "default": "prettier"}, "vetur.format.defaultFormatter.html": {"description": "Default formatter for <template> region", "enum": ["none", "prettyhtml", "js-beautify-html", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "üöß [DEPRECATED] prettyhtml", "html formatter of js-beautify", "prettier"], "default": "prettier"}, "vetur.completion.autoImport": {"description": "Include completion for module export and auto import them", "type": "boolean", "default": true}, "vetur.languageFeatures.semanticTokens": {"description": "Whether to enable semantic highlighting. Currently only works for typescript", "type": "boolean", "default": true}, "vetur.dev.vlsPort": {"description": "The port that VLS listens to. Can be used for attaching to the VLS Node process for debugging / profiling.", "type": "number", "default": -1}, "vetur.completion.scaffoldSnippetSources": {"properties": {"workspace": {"description": "Show Scaffold Snippets from `<WORKSPACE>/.vscode/vetur/snippets`.", "type": "string", "default": "üíº"}, "vetur": {"description": "Show Scaffold Snippets bundled in Vetur.", "type": "string", "default": "‚úå"}, "user": {"description": "Show Scaffold Snippets from `<USER-DATA-DIR>/User/snippets/vetur`.", "type": "string", "default": "üóíÔ∏è"}}, "description": "Where Vetur source Scaffold Snippets from and how to indicate them. Set a source to \"\" to disable it.\n\n- workspace: `<WORKSPACE>/.vscode/vetur/snippets`.\n- user: `<USER-DATA-DIR>/User/snippets/vetur`.\n- vetur: Bundled in Vetur.\n\nThe default is:\n```\n\"vetur.completion.scaffoldSnippetSources\": {\n  \"workspace\": \"üíº\",\n  \"user\": \"üóíÔ∏è\",\n  \"vetur\": \"‚úå\"\n}\n```\n\nAlternatively, you can do:\n\n```\n\"vetur.completion.scaffoldSnippetSources\": {\n  \"workspace\": \"(W)\",\n  \"user\": \"(U)\",\n  \"vetur\": \"(V)\"\n}\n```\n\nRead more: https://vuejs.github.io/vetur/snippet.html.", "type": "object", "default": {"workspace": "üíº", "vetur": "‚úå", "user": "üóíÔ∏è"}}, "vetur.format.styleInitialIndent": {"description": "Whether to have initial indent for <style> region", "type": "boolean", "default": false}, "vetur.experimental.templateInterpolationService": {"description": "Enable template interpolation service that offers hover / definition / references in Vue interpolations.", "type": "boolean", "default": false}, "vetur.format.defaultFormatter.stylus": {"description": "Default formatter for <style lang='stylus'> region", "enum": ["none", "stylus-supremacy"], "type": "string", "enumDescriptions": ["disable formatting", "stylus formatter from stylus-supremacy"], "default": "stylus-supremacy"}, "vetur.format.defaultFormatter.js": {"description": "Default formatter for <script> region", "enum": ["none", "prettier", "prettier-eslint", "vscode-typescript"], "type": "string", "enumDescriptions": ["disable formatting", "js formatter from prettier", "prettier-eslint", "js formatter from TypeScript"], "default": "prettier"}, "vetur.format.defaultFormatter.sass": {"description": "Default formatter for <style lang='sass'> region", "enum": ["none", "sass-formatter"], "type": "string", "enumDescriptions": ["disable formatting", "sass formatter"], "default": "sass-formatter"}, "vetur.format.defaultFormatter.pug": {"description": "Default formatter for <template lang='pug'> region", "enum": ["none", "prettier"], "type": "string", "enumDescriptions": ["disable formatting", "prettier"], "default": "prettier"}, "vetur.format.defaultFormatter.ts": {"description": "Default formatter for <script> region", "enum": ["none", "prettier", "prettier-tslint", "vscode-typescript"], "type": "string", "enumDescriptions": ["disable formatting", "ts formatter using typescript parser from prettier", "ts formatter from TypeScript"], "default": "prettier"}}, "description": "Vue tooling for VS Code", "$schema": "http://json-schema.org/draft-07/schema#"}