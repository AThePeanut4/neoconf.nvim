{"properties": {"tailwindCSS.hovers": {"scope": "language-overridable", "type": "boolean", "markdownDescription": "Enable hovers.", "default": true}, "tailwindCSS.rootFontSize": {"type": "number", "markdownDescription": "Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.", "default": 16}, "tailwindCSS.files.exclude": {"type": "array", "markdownDescription": "Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.", "default": ["**/.git/**", "**/node_modules/**", "**/.hg/**"], "items": {"type": "string"}}, "tailwindCSS.emmetCompletions": {"type": "boolean", "markdownDescription": "Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`", "default": false}, "tailwindCSS.inspectPort": {"type": ["number", "null"], "markdownDescription": "Enable the Node.js inspector agent for the language server and listen on the specified port.", "default": null}, "tailwindCSS.showPixelEquivalents": {"type": "boolean", "markdownDescription": "Show `px` equivalents for `rem` CSS values.", "default": true}, "tailwindCSS.colorDecorators": {"scope": "language-overridable", "type": "boolean", "markdownDescription": "Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.", "default": true}, "tailwindCSS.experimental.classRegex": {"scope": "language-overridable", "type": "array"}, "tailwindCSS.lint.invalidTailwindDirective": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)", "default": "error"}, "tailwindCSS.lint.invalidVariant": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)", "default": "error"}, "tailwindCSS.lint.invalidConfigPath": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)", "default": "error"}, "tailwindCSS.includeLanguages": {"additionalProperties": {"type": "string"}, "type": "object", "markdownDescription": "Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`", "default": {}}, "tailwindCSS.lint.invalidScreen": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)", "default": "error"}, "tailwindCSS.classAttributes": {"type": "array", "markdownDescription": "The HTML attributes for which to provide class completions, hover previews, linting etc.", "default": ["class", "className", "ngClass"], "items": {"type": "string"}}, "tailwindCSS.validate": {"scope": "language-overridable", "type": "boolean", "markdownDescription": "Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings", "default": true}, "tailwindCSS.lint.cssConflict": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Class names on the same HTML element which apply the same CSS property or properties", "default": "warning"}, "tailwindCSS.lint.invalidApply": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)", "default": "error"}, "tailwindCSS.suggestions": {"scope": "language-overridable", "type": "boolean", "markdownDescription": "Enable autocomplete suggestions.", "default": true}, "tailwindCSS.codeActions": {"scope": "language-overridable", "type": "boolean", "markdownDescription": "Enable code actions.", "default": true}, "tailwindCSS.lint.recommendedVariantOrder": {"enum": ["ignore", "warning", "error"], "scope": "language-overridable", "type": "string", "markdownDescription": "Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)", "default": "warning"}, "tailwindCSS.experimental.configFile": {"type": ["null", "string", "object"], "markdownDescription": "Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.", "default": null}}, "description": "Intelligent Tailwind CSS tooling for VS Code", "$schema": "http://json-schema.org/draft-07/schema#"}