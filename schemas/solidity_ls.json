{"properties":{"solidity.compileUsingLocalVersion":{"type":"string","default":"","description":"Compile using a local solc binary file, please include the path of the file if wanted: 'C:\/\/v0.4.3+commit.2353da71.js'"},"solidity.remappingsWindows":{"type":"array","default":[],"description":"Windows Remappings to resolve contracts to local Windows files \/ directories (Note this overrides the generic remapping settings if the OS is Windows) , i.e: [\"@openzeppelin\/=C:\/lib\/openzeppelin-contracts\",\"ds-test\/=C:\/lib\/ds-test\/src\/\"]"},"solidity.defaultCompiler":{"type":"string","default":"remote","description":"Sets the default compiler to use","enum":["remote","localFile","localNodeModule","embedded"]},"solidity.remappingsUnix":{"type":"array","default":[],"description":"Unix Remappings to resolve contracts to local Unix files \/ directories (Note this overrides the generic remapping settings if the OS is Unix based), i.e: [\"@openzeppelin\/=\/opt\/lib\/openzeppelin-contracts\",\"ds-test\/=\/opt\/lib\/ds-test\/src\/\"]"},"solidity.enabledAsYouTypeCompilationErrorCheck":{"type":"boolean","default":true,"description":"Enables as you type compilation of the document and error highlighting"},"solidity.soliumRules":{"type":["object"],"default":{"variable-declarations":0,"indentation":["off",4],"quotes":["off","double"],"imports-on-top":0},"description":"Solium linting validation rules"},"solidity.validationDelay":{"type":"number","default":1500,"description":"Delay to trigger the validation of the changes of the current document (compilation, solium)"},"solidity.linter":{"type":"string","default":"solhint","description":"Enables linting using either solium (ethlint) or solhint. Possible options 'solhint' and 'solium', the default is solhint","enum":["","solhint","solium"]},"solidity.packageDefaultDependenciesDirectory":{"type":"string","default":"node_modules","description":"Default directory for Packages Dependencies, i.e: 'node_modules', 'lib'. This is used to avoid typing imports with that path prefix"},"solidity.solhintRules":{"type":["object"],"default":null,"description":"Solhint linting validation rules"},"solidity.nodemodulespackage":{"type":"string","default":"solc","description":"The node modules package to find the solcjs compiler"},"solidity.formatter":{"type":"string","default":"prettier","description":"Enables \/ disables the solidity formatter (prettier solidity default)","enum":["none","prettier","forge"]},"solidity.compileUsingRemoteVersion":{"type":"string","default":"latest","description":"Compile downloading a remote solc binary file, for example: 'latest' or 'v0.4.3+commit.2353da71', use the command 'Solidity: Get solidity releases' to list all versions, or just right click in a solidity file to simply select the version"},"solidity.packageDefaultDependenciesContractsDirectory":{"type":"string","default":"","description":"Default directory where the Package Dependency store its contracts, i.e: 'src', 'contracts', or just a blank string '', this is used to avoid typing imports with subfolder paths"},"solidity.compilerOptimization":{"type":"number","default":200,"description":"Optimize for how many times you intend to run the code. Lower values will optimize more for initial deployment cost, higher values will optimize more for high-frequency usage."},"solidity.remappings":{"type":"array","default":[],"description":"Remappings to resolve contracts to local files \/ directories, i.e: [\"@openzeppelin\/=lib\/openzeppelin-contracts\",\"ds-test\/=lib\/ds-test\/src\/\"]"}},"$schema":"http:\/\/json-schema.org\/draft-07\/schema#","description":"Ethereum Solidity Language for Visual Studio Code"}