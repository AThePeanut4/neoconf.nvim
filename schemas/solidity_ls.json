{"properties": {"solidity.packageDefaultDependenciesContractsDirectory": {"description": "Default directory where the Package Dependency store its contracts, i.e: 'src', 'contracts', or just a blank string '', this is used to avoid typing imports with subfolder paths", "type": "string", "default": ""}, "solidity.compilerOptimization": {"description": "Optimize for how many times you intend to run the code. Lower values will optimize more for initial deployment cost, higher values will optimize more for high-frequency usage.", "type": "number", "default": 200}, "solidity.formatter": {"description": "Enables / disables the solidity formatter (prettier solidity default)", "enum": ["none", "prettier"], "type": "string", "default": "prettier"}, "solidity.packageDefaultDependenciesDirectory": {"description": "Default directory for Packages Dependencies, i.e: 'node_modules', 'lib'. This is used to avoid typing imports with that path prefix", "type": "string", "default": "node_modules"}, "solidity.remappingsWindows": {"description": "Windows Remappings to resolve contracts to local Windows files / directories (Note this overrides the generic remapping settings if the OS is Windows) , i.e: [\"@openzeppelin/=C:/lib/openzeppelin-contracts\",\"ds-test/=C:/lib/ds-test/src/\"]", "type": "array", "default": []}, "solidity.solhintRules": {"description": "Solhint linting validation rules", "type": ["object"], "default": null}, "solidity.validationDelay": {"description": "Delay to trigger the validation of the changes of the current document (compilation, solium)", "type": "number", "default": 1500}, "solidity.nodemodulespackage": {"description": "The node modules package to find the solcjs compiler", "type": "string", "default": "solc"}, "solidity.linter": {"description": "Enables linting using either solium (ethlint) or solhint. Possible options 'solhint' and 'solium', the default is solhint", "enum": ["", "solhint", "solium"], "type": "string", "default": "solhint"}, "solidity.soliumRules": {"description": "Solium linting validation rules", "type": ["object"], "default": {"variable-declarations": 0, "imports-on-top": 0, "indentation": ["off", 4], "quotes": ["off", "double"]}}, "solidity.compileUsingRemoteVersion": {"description": "Compile downloading a remote solc binary file, for example: 'latest' or 'v0.4.3+commit.2353da71', use the command 'Solidity: Get solidity releases' to list all versions, or just right click in a solidity file to simply select the version", "type": "string", "default": "latest"}, "solidity.remappingsUnix": {"description": "Unix Remappings to resolve contracts to local Unix files / directories (Note this overrides the generic remapping settings if the OS is Unix based), i.e: [\"@openzeppelin/=/opt/lib/openzeppelin-contracts\",\"ds-test/=/opt/lib/ds-test/src/\"]", "type": "array", "default": []}, "solidity.enabledAsYouTypeCompilationErrorCheck": {"description": "Enables as you type compilation of the document and error highlighting", "type": "boolean", "default": true}, "solidity.defaultCompiler": {"description": "Sets the default compiler to use", "enum": ["remote", "localFile", "localNodeModule", "embedded"], "type": "string", "default": "remote"}, "solidity.remappings": {"description": "Remappings to resolve contracts to local files / directories, i.e: [\"@openzeppelin/=lib/openzeppelin-contracts\",\"ds-test/=lib/ds-test/src/\"]", "type": "array", "default": []}, "solidity.compileUsingLocalVersion": {"description": "Compile using a local solc binary file, please include the path of the file if wanted: 'C://v0.4.3+commit.2353da71.js'", "type": "string", "default": ""}}, "description": "Ethereum Solidity Language for Visual Studio Code", "$schema": "http://json-schema.org/draft-07/schema#"}